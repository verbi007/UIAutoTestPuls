plugins {
    id "java-library"
    id "io.qameta.allure" version "2.11.2"
    id "com.github.ben-manes.versions" version "0.43.0"
    id 'org.jetbrains.kotlin.jvm' version '1.9.21'
}
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
group "com.github.rosolko"
version "1.0.0"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

def allureVersion = "2.25.0"

allure {
    autoconfigure = true
    aspectjweaver = true
    version = allureVersion


    useJUnit5 {
        version = allureVersion
    }
}

repositories {
    mavenLocal()
    mavenCentral()

}

dependencies {
    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
    runtimeOnly("org.aspectj:aspectjweaver:1.9.19")

    // Test
    implementation('com.codeborne:selenide:7.0.4')
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")

    // Server
    testImplementation("io.undertow:undertow-core:2.3.6.Final")

    // Config
    implementation("com.typesafe:config:1.4.3")

    // Allure
    implementation("io.qameta.allure:allure-okhttp3:" + allureVersion)
    testImplementation("io.qameta.allure:allure-java-commons:" + allureVersion)
    testImplementation("io.qameta.allure:allure-selenide:" + allureVersion)
    testImplementation("io.qameta.allure:allure-junit5:" + allureVersion)
    testImplementation("io.qameta.allure:allure-assertj:" + allureVersion)

    // Logging
    testRuntimeOnly("org.slf4j:slf4j-simple:2.0.4")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}
tasks.withType(Test) {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    maxParallelForks = (int) (Runtime.runtime.availableProcessors().intdiv(2) ?: 1)
}

wrapper.gradleVersion = "7.5.1"